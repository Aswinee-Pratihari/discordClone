// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//NOTE
//CMD TO RUN AFTER CHANGES IN PRISMA FILE
//1. npx prisma generate
//2. npx prisma db push
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @unique
  name     String
  imageurl String @db.String
  email    String @db.String

  server   Server[]
  members  Member[]
  Channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  imageurl   String @db.String
  inviteCode String @db.String

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String  @db.ObjectId

  members  Member[]
  Channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  role      MemberRole @default(GUEST)
  profile   Profile    @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String     @db.ObjectId

  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  type      ChannelType @default(TEXT)
  server    Server      @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId  String      @db.ObjectId
  profile   Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String      @db.ObjectId
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
